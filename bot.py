import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import *
from asyncio import sleep
import random


#from config import API_TOKEN

logging.basicConfig(level=logging.INFO)

bot = Bot(token='1373154390:AAEAeDCgyOJvXfM19mXA75hfVVWbpwFj85U')
dp = Dispatcher(bot,storage=MemoryStorage())


WELCOME_MESSAGE = """–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç EZWORKüëã
–Ø –±—É–¥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ —à–∫–æ–ª—å–Ω—ã–µ –∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –∑–∞ —Ç–µ–±—èüò±
–ù–∞–ø–∏—à–∏ –º–Ω–µ "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑" –∏ —Å–ø—É—Å—Ç—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ —è –ü–û–ú–û–ì–£ –¢–ï–ë–ïü§ó
–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –∫–∏–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞, —Ç–æ –ø–∏—à–∏ –º–Ω–µ –Ω–∞–ø—Ä—è–º—É—é @PIR4T
–Ø –Ω–µ –∫—É—Å–∞—é—Å—åüòâ!"""
ORDER_MESSAGE = """–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑, —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å—Ç–∞—Ç—å—ë–π, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–æ –∫–∞–∫ –≥—Ä–∞–º–æ—Ç–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É. –û—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∑–∞–≤–∏—Å–∏—Ç —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ä–∫–µ—Ä–æ–≤, –∏ –∏—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞.
https://telegra.ph/Obyazatelno-k-prochteniyu-EZWORK-01-20
–í–†–ï–ú–Ø –ü–†–û–ß–¢–ï–ù–ò–Ø 4 –ú–ò–ù–£–¢–´üî•
‚ÄºÔ∏è–í–ê–ñ–ù–û‚ÄºÔ∏è –û–ø–ª–∞—Ç–∏–≤ –∑–∞–∫–∞–∑, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏:
https://docs.google.com/document/d/1dK5lvso6IKPw4PmZwLkVeEv-L3ywuPe1fN2xBs5r_q0/
–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –∫–∏–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –∏–ª–∏ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞, —Ç–æ –ø–∏—à–∏ –º–Ω–µ –Ω–∞–ø—Ä—è–º—É—é @PIR4T
–Ø –Ω–µ –∫—É—Å–∞—é—Å—åüòâ"""
CANCEL_MESSAGE = """–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω!"""
FILLED_MESSAGE = """–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: {}
–ò—â–µ–º –≤–æ—Ä–∫–µ—Ä–∞ –Ω–∞ –≤–∞—à –∑–∞–∫–∞–∑üë∑‚Äç‚ôÇÔ∏è
–û–∂–∏–¥–∞–π—Ç–µ...‚è±"""
ACCEPTED_MESSAGE = """–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç‚úÖ"""
DENIED_OTMENA_MESSAGE = """–ó–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω‚ùå"""
DENIED_AFK_MESSAGE = """–ü–æ–∫–∞ —á—Ç–æ –Ω–∏–∫—Ç–æ –∏–∑ –≤–æ—Ä–∫–µ—Ä–æ–≤ –Ω–µ –æ—Ç–ø–∏—Å–∞–ª –ø–æ –ø–æ–≤–æ–¥—É –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞. –ï—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º –∫—Ç–æ-—Ç–æ –æ—Ç–ø–∏—à–µ—Ç - —è —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –≤ –õ–°üòâ"""
CONST_MESSAGE = """–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –≤—Å—é –∫–æ–º–∏—Å—Å–∏—é —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ø–ª–∞—Ç—ë–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤—ã –±–µ—Ä—ë—Ç–µ –Ω–∞ —Å–µ–±—è‚ùóÔ∏è
–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–¥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è —É–≤–µ–¥–æ–º–∏—Ç—åüî•
–ê–ö–¢–£–ê–õ–¨–ù–´–ï –†–ï–ö–í–ò–ó–ò–¢–´:
ü•ùQIWI: +79056938879
üí≥QIWI card: 4890494717118020
üî∏BTC: bc1qnnc4wkr78dvu3u7tk29lvgeqwhu0l3g85z6cde
üîπETH: 0xcC5B68AdB60D39B9de083A2d73c4BF98671F343f
üÖøÔ∏èPAYEER: P1023042699"""

FIRST_QUESTION = """1. –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Å —Ñ–æ—Ä—É–º–∞.
–ï—Å–ª–∏ —Ç—ã –Ω–µ —Å —Ñ–æ—Ä—É–º–∞ - —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–∏ "–º–∏–Ω—É—Å"."""
SECOND_QUESTION = """2. –ö–∞–∫–æ–π –∫–ª–∞—Å—Å/–∫—É—Ä—Å?"""
THIRD_QUESTION = """3. –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞."""
FOURTH_QUESTION = """4. –ó–∞–¥–∞–Ω–∏–µ.
–í —ç—Ç–æ–º –ø—É–Ω–∫—Ç–µ —Ç—ã –¥–æ–ª–∂–µ–Ω —Å–∫–∏–Ω—É—Ç—å –í–°–Æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–¥–∞–Ω–∏—é.
–¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ç–æ—á–Ω–∏—Ç—å –≤ –∫–∞–∫–æ–º –≤–∏–¥–µ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞ - —Ä—É–∫–æ–ø–∏—Å–Ω–æ–º –∏–ª–∏ –ø–µ—á–∞—Ç–Ω–æ–º (–ø–µ—á–∞—Ç–Ω—ã–π - —Ä–µ—à—ë–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Ç–µ–±–µ —Å–∫–∏–Ω—É—Ç –≤ —Ñ–∞–π–ª–µ doc, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º –≤ —Ç–≥; —Ä—É–∫–æ–ø–∏—Å–Ω—ã–π - —Ç–µ–±–µ —Å–∫–∏–Ω—É—Ç —Ñ–æ—Ç–æ –ª–∏—Å—Ç–∞ —Å —Ä–µ—à–µ–Ω–∏–µ–º –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º –æ—Ç —Ä—É–∫–∏).
–ï—Å–ª–∏ –Ω–∞–¥–æ —Å–∫–∏–Ω—É—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏ –æ–±–ª–∞—á–Ω—ã–º–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º–∏:
disk.yandex.ru
drive.google.com
files.dp.ua
dropmefiles.com """
FIFTH_QUESTION = """5. –°—Ä–æ–∫–∏.
–ù–∞–∑–æ–≤–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ –ú–°–ö, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –º—ã –¥–æ–ª–∂–Ω—ã —É—Å–ø–µ—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ –≥–æ—Ç–æ–≤—É—é —Ä–∞–±–æ—Ç—É."""
SIXTH_QUESTION = """6. –¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞?
–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ –∫–∞–∫—É—é –Ω–∞–∑–≤–∞—Ç—å —Ü–µ–Ω—É - —Å—Ç–∞–≤—å—Ç–µ "–º–∏–Ω—É—Å". –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã —Å–∞–º–∏ –≤–∞–º –µ—ë —Å–æ–æ–±—â–∏–º."""

BUTTON_1 = '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑'
BUTTON_2 = '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'
BUTTON_3 = """–†–µ–∫–≤–∏–∑–∏—Ç—ã"""
BUTTON_4 = '–û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞'

OWNER_ID = 702885050
texsts = ""
kb_1 = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton(BUTTON_1)).add(KeyboardButton(BUTTON_3))
kb_2 = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton(BUTTON_2)).add(KeyboardButton(BUTTON_3))
kb_3 = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton(BUTTON_3)).add(KeyboardButton(BUTTON_4))
kb_4 = InlineKeyboardMarkup().add(InlineKeyboardButton(text="–î–∞",callback_data='da')).add(InlineKeyboardButton(text="–ù–µ—Ç",callback_data='net'))
users = {}
orders = {}

class getstates(StatesGroup):
    inputphoto = State()

def get_users():
    with open('users.txt', 'r') as f:
        return [int(i) for i in f.readlines()]


def update_users(users):
    with open('users.txt', 'w') as f:
        f.write('\n'.join([str(i) for i in users]))


def get_banneds():
    with open('banneds.txt', 'r') as f:
        return [int(i) for i in f.readlines()]


def update_banneds(banneds):
    with open('banneds.txt', 'w') as f:
        f.write('\n'.join([str(i) for i in banneds]))


@dp.message_handler(state=getstates.inputphoto)
async def inputphoto(message: types.Message, state: FSMContext):
    answer = message.text
    ids = set(get_users())
    good = bad = 0
    for id in ids:
        try:
            
            await bot.send_photo(id,f'{answer}',caption=f'{texsts}')
            good += 1
        except:
            bad += 1
    await bot.delete_message(message.chat.id,message.message_id)
    await message.answer(f'–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–£—Å–ø–µ—à–Ω–æ: {good}\n–û—à–∏–±–∫–∞: {bad}\n–í—Å–µ–≥–æ: {good + bad}')            
    await state.finish()

@dp.message_handler(commands=['start'])
async def handler(message: Message):
    id = message.from_user.id

    if id in get_banneds():
        return

    ids = set(get_users())
    if id not in ids:
        ids.add(id)
        update_users(list(ids))

    if id not in users.keys():
        users[id] = {
            'step': 0,
            'answers': []
        }

    if users[id]['step'] == 7:
        return

    if id != OWNER_ID:
        await message.answer(WELCOME_MESSAGE, reply_markup=kb_1)
    else:
        await message.answer(WELCOME_MESSAGE)


#@dp.message_handler(content_types=['photo'])
@dp.callback_query_handler()
async def query_handler(call):
    user_id = call.message.chat.id
    ids = set(get_users())
    if call.message:
        if call.data == 'da':
            await bot.delete_message(call.message.chat.id,call.message.message_id)
            await call.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ.(–°–¥–µ–ª–∞—Ç—å —Å—Å—ã–ª–∫—É –ø–æ–º–æ–∂–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç - @imgurbot_bot)')
            await getstates.inputphoto.set()
        elif call.data == 'net':
            good = bad = 0
            for id in ids:
                try:
                    await bot.send_message(id, texsts)
                    good += 1
                except:
                    bad += 1
            await bot.delete_message(call.message.chat.id,call.message.message_id)
            await call.message.answer(f'–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–£—Å–ø–µ—à–Ω–æ: {good}\n–û—à–∏–±–∫–∞: {bad}\n–í—Å–µ–≥–æ: {good + bad}')            


@dp.message_handler(content_types=ContentType.ANY)
async def handler(message: Message):
    id, tx = message.from_user.id, message.text
    if id in get_banneds():
        return

    ids = set(get_users())
    if id not in ids:
        ids.add(id)
        update_users(list(ids))

    if id == OWNER_ID:
        if message.reply_to_message:
            txt = message.reply_to_message.text
            order_id = int(txt.split(': ')[1].split('\n')[0])
            user_id = orders[order_id]
            if users[user_id]['step'] != 7:
                await message.answer('–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤')
            else:
                await bot.forward_message(chat_id=user_id, from_chat_id=OWNER_ID, message_id=message.message_id)
                await message.answer('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')
        elif message.text.startswith('/broadcast '):
            text = tx[11:]
            global texsts
            texsts = text
            await message.answer('–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ?',reply_markup=kb_4)
        elif tx == '/users':
            await message.answer(f'–Æ–∑–µ—Ä–æ–≤ –≤ –±–æ—Ç–µ: {len(get_users())}\n–ò–∑ –Ω–∏—Ö –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö: {len(get_banneds())}')        
        elif tx.startswith('/accept_'):
            order_id = int(tx.split('_')[1])
            if not any( x == order_id for x in orders):
                await message.answer('–ó–∞–∫–∞–∑ –Ω–µ –∞–∫—Ç—É–∞–ª–µ–Ω')
            else:
                user_id = orders[order_id]
                del orders[order_id]
                users[user_id]['step'] = 0
                await bot.send_message(user_id, ACCEPTED_MESSAGE, reply_markup=kb_1)
                await message.answer('–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!')
        elif tx.startswith('/decline_'):
            order_id = int(tx.split('_')[1])
            if not any( x == order_id for x in orders):
                await message.answer('–ó–∞–∫–∞–∑ –Ω–µ –∞–∫—Ç—É–∞–ª–µ–Ω')
            else:
                user_id = orders[order_id]
                del orders[order_id]
                users[user_id]['step'] = 0
                await bot.send_message(user_id, DENIED_OTMENA_MESSAGE, reply_markup=kb_1)
                await message.answer('–ó–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω!')
        elif tx.startswith('/ban '):
            id_ban = int(tx.split()[-1])
            banneds = set(get_banneds())
            banneds.add(id_ban)
            update_banneds(list(banneds))
            await message.answer('–ó–∞–±–∞–Ω–µ–Ω!')
        elif tx.startswith('/unban '):
            id_ban = int(tx.split()[-1])
            banneds = set(get_banneds())
            banneds.discard(id_ban)
            update_banneds(list(banneds))
            await message.answer('–†–∞–∑–±–∞–Ω–µ–Ω!')

    elif id not in users.keys():
        users[id] = {
            'step': 0,
            'answers': []
        }

    elif tx == BUTTON_1 and users[id]['step'] != 7:
        await message.answer(ORDER_MESSAGE)
        await sleep(1)
        await message.answer(FIRST_QUESTION, reply_markup=kb_2)
        users[id]['step'] = 1

    elif tx == BUTTON_2 and users[id]['step'] != 7:
        users[id] = {
            'step': 0,
            'answers': []
        }
        await message.answer(CANCEL_MESSAGE, reply_markup=kb_1)

    elif tx == BUTTON_3:
        await message.answer(CONST_MESSAGE)

    elif tx == BUTTON_4 and users[id]['step'] == 7:
        users[id] = {
            'step': 0,
            'answers': []
        }
        await message.answer(CANCEL_MESSAGE, reply_markup=kb_1)
        await bot.send_message(OWNER_ID,f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.mention} –æ—Ç–º–µ–Ω–∏–ª –∑–∞–∫–∞–∑')       


    elif users[id]['step'] == 1:
        await message.answer(SECOND_QUESTION)
        users[id]['answers'].append(message.message_id)
        users[id]['step'] = 2

    elif users[id]['step'] == 2:
        await message.answer(THIRD_QUESTION)
        users[id]['answers'].append(message.message_id)
        users[id]['step'] = 3

    elif users[id]['step'] == 3:
        await message.answer(FOURTH_QUESTION)
        users[id]['answers'].append(message.message_id)
        users[id]['step'] = 4

    elif users[id]['step'] == 4:
        await message.answer(FIFTH_QUESTION)
        users[id]['answers'].append(message.message_id)
        users[id]['step'] = 5

    elif users[id]['step'] == 5:
        await message.answer(SIXTH_QUESTION)
        users[id]['answers'].append(message.message_id)
        users[id]['step'] = 6

    elif users[id]['step'] == 6:
        order_id = random.randint(10000, 99999)
        while order_id in orders.keys():
            order_id = random.randint(10000, 99999)

        orders[order_id] = id

        await message.answer(FILLED_MESSAGE.format(order_id), reply_markup=kb_3)
        users[id]['answers'].append(message.message_id)
        users[id]['step'] = 7

        await bot.send_message(OWNER_ID, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\nID –ó–∞–∫–∞–∑–∞: {order_id}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [{id}](tg://user?id={id})\n\n–ß—Ç–æ –±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n–ß—Ç–æ –±—ã –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /accept\\_{order_id}\n–ß—Ç–æ –±—ã –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /decline\\_{order_id}', parse_mode=ParseMode.MARKDOWN)
        for msg in users[id]['answers']:
            await bot.forward_message(chat_id=OWNER_ID, from_chat_id=id, message_id=msg)

        users[id]['answers'] = []

     



    elif users[id]['step'] == 7:
        for order_id, user_id in orders.items():
            if user_id == id:
                break
        await bot.send_message(OWNER_ID, f'–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∑–∞–∫–∞–∑—É: {order_id}\n\n–ß—Ç–æ –±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n–ß—Ç–æ –±—ã –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /accept_{order_id}\n–ß—Ç–æ –±—ã –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /decline_{order_id}')
        await bot.forward_message(chat_id=OWNER_ID, from_chat_id=id, message_id=message.message_id)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
